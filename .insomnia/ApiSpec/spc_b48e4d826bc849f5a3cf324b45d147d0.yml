_id: spc_b48e4d826bc849f5a3cf324b45d147d0
type: ApiSpec
parentId: wrk_c545c7b54efc4918b5101193d6a961a6
modified: 1672742815029
created: 1656265914508
fileName: toys.yaml
contents: >-
  openapi: 3.0.0

  info:
    title: OpenAPI спецификация каталога детских игрушек
    description: Спецификация для проведения обучения по проектированию и тестирования API
    license:
      name: Apache 2.0
      url: https://www.apache.org/licenses/LICENSE-2.0.html
    version: 0.1.0
    contact:
      name: Anton Klimakov
      url: https://github.com/MorkovkAs/openapi-example-toys
      email: avklimakov@gmail.com
  servers:
    - url: http://localhost:8080/api/v1
      description: Dev server  


  tags:
    - name: Toy
      description: "All methods about Toys"


    
  paths:
    /toys:
      get:
        summary: Метод получения игрушек
        description: Метод предназначен для получения списка всех игрушек, сохраненных в БД.
        operationId: getToys
        tags:
          - Toy
        responses:
          '200':
            description: Список игрушек
            content:
              application/json;charset=UTF-8:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Toy"
      post:
        summary: Метод добавления новой игрушки в каталог
        description: Метод предназначен для сохранения в БД данных по новой игрушке.
        operationId: createToy
        tags:
          - Toy
        requestBody:
          required: true
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Toy"
        responses:
          '200':
            description: Подтверждение успешного сохранения
            content:
              application/json;charset=UTF-8:
                schema:
                  $ref: "#/components/schemas/Toy"
          '400':
            description: Некорректные входные данные. Возвращает список атрибутов с ошибками
            content:
              application/json;charset=UTF-8:
                schema:
                  type: array
                  items:
                    type: string
    /toys/{id}:
      get:
        summary: Метод получения игрушки по идентификатору
        description: Метод предназначен для получения из БД данных по игрушке.
        operationId: getToyById
        tags:
          - Toy
        parameters:
          - name: id
            in: path
            required: true
            description: Идентификатор игрушки
            example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Игрушка
            content:
              application/json;charset=UTF-8:
                schema:
                  $ref: "#/components/schemas/Toy"
      put:
        summary: Метод обновления игрушки в каталоге
        description: Метод предназначен для обновления в БД данных по имеющейся игрушке.
        operationId: updateToy
        tags:
          - Toy
        parameters:
          - name: id
            in: path
            required: true
            description: Идентификатор игрушки
            example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
            schema:
              type: string
              format: uuid
        requestBody:
          required: true
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Toy"
        responses:
          '200':
            description: Подтверждение успешного обновления
            content:
              application/json;charset=UTF-8:
                schema:
                  $ref: "#/components/schemas/Toy"
          '400':
            description: Некорректные входные данные. Возвращает список атрибутов с ошибками
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: string
          '5XX':
            description: Любая неожиданная ошибка сервера
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
      delete:
        summary: Метод удаления игрушки по идентификатору
        description: Метод предназначен для удаления в БД данных по игрушке.
        operationId: deleteToyById
        tags:
          - Toy
        parameters:
          - name: id
            in: path
            required: true
            description: Идентификатор игрушки
            example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Успешное удаление
            content: {}
    /toys/status/{status}:
      get:
        summary: Метод получения игрушек по состоянию      
        description: Метод предназначен для получения игрушек из БД по их состоянию.
        operationId: getToyByStatus
        tags:
          - Toy
        parameters:
          - name: status
            in: path
            required: true
            description: Статус (состояние) игрушки
            schema:
              type: string
              enum: 
                - new
                - used
                - broken
        responses:
          '200':
            description: Игрушка
            content:
              application/json;charset=UTF-8:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Toy"




                  
  components:
    schemas:
      Toy:
        type: object
        required:
          - name
          - status
        properties:
          toy_id:
            type: string
            format: uuid
            example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          name:
            description: Название игрушки
            type: string
            example: Train
          status:
            description: Статус (состояние) игрушки
            type: string
            enum:
              - new
              - used
              - broken
            example: new
          note:
            description: Описание, пометки
            type: string
            example: Found on a street
          created_at:
            description: Дата и время сохранения игрушки в каталоге
            type: string
            example: 2022-07-01T15:00:00+01
      Error:
        type: object
        required:
          - title
          - detail
          - request
          - time
          - errorTraceId
        properties:
          title:
            description: Краткое описание проблемы, понятное человеку
            type: string
            example: Entity not found
          detail:
            description: Описание конкретно возникшей ошибки, понятное человеку
            type: string
            example: Entity [Post] with id = [123456] not found. You MUST use POST to add entity instead of PUT
          request:
            description: Метод и URL запроса
            type: string
            example: PUT /posts/123456
          time:
            description: Время возникновения ошибки с точностью до миллисекунд
            type: string
            example: 1996-12-19T16:39:57.87-08:00
          errorTraceId:
            description: Идентификатор конкретного возникновения ошибки
            type: string
            example: ce1ff211-b5dd-4397-b8a8-3f640705efa2
            
          errorCode:
            description: Код ошибки по бизнес логике приложения
            type: integer
            format: int32
            example: 57
            
          exception:
            description: Тип ошибки
            type: string
            example: NullPointerException
          stacktrace:
            description: Stacktrace в случае возникновения на сервере исключения
            type: string
            example: ...
          causeException:
            description: Тип первоначального исключения
            type: string
            example: ...
          causeStacketrace:
            description: Stacktrace первоначального исключения
            type: string
            example: ...
contentType: yaml
